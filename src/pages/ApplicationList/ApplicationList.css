.applications-head {
    color: #1a1a1a;
    font-size: 52px;
    font-weight: 800;
    text-align: center;
    margin: 60px 0 10px;
    letter-spacing: -0.5px;
    background: linear-gradient(90deg, #002855, #0055cc);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: fadeInDown 0.6s ease-in-out;
  }
  
  .applications-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
    gap: 30px;
    padding: 40px 60px;
    max-width: 1400px;
    margin: auto;
    min-height: 60vh;
    animation: fadeIn 0.6s ease-in-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .no-applications {
    text-align: center;
    font-size: 22px;
    color: #999;
    font-weight: 600;
    margin-top: 80px;
    opacity: 0.8;
    letter-spacing: 0.5px;
  }
  
  @media (max-width: 1024px) {
    .applications-container {
      padding: 30px;
      gap: 25px;
    }
  
    h2.applications-head {
      font-size: 44px;
    }
  }
  
  @media (max-width: 768px) {
    h2.applications-head {
      font-size: 38px;
    }
  
    .applications-container {
      padding: 20px;
      gap: 20px;
    }
  }
  
  @media (max-width: 480px) {
    h2.applications-head {
      font-size: 32px;
      margin-bottom: 20px;
    }
  
    .applications-container {
      padding: 15px;
      gap: 16px;
    }
  
    .no-applications {
      font-size: 18px;
    }
  }

/* keep existing styles above, add filter styles (reuse JobsList look) */

.filter-card {
  margin: 1rem auto;
  max-width: 1100px;
  background: linear-gradient(180deg,#ffffff,#fbfdff);
  border: 1px solid rgba(3,64,156,0.07);
  box-shadow: 0 10px 28px rgba(6,45,80,0.05);
  padding: 14px 18px;
  border-radius: 12px;
  display:flex;
  flex-direction:column;
  gap:10px;
}
.filter-card:hover { transform: translateY(-2px); transition: transform .14s ease; }

/* sort dropdown (reused) */
.sort-wrapper { position: relative; z-index: 9999; }
.sort-wrapper .sort-dropdown {
  position: absolute !important;
  top: calc(100% + 8px) !important;
  right: 0 !important;
  left: auto !important;
  min-width: 160px;
  z-index: 9999;
}
.sort-dropdown {
  position: absolute;
  right: 0;
  top: 44px;
  background: #fff;
  border-radius: 10px;
  padding: 6px 6px;
  border: 1px solid rgba(3,64,156,0.08);
  box-shadow: 0 18px 40px rgba(6,45,80,0.12);
  z-index: 2147483647;
  transform-origin: top left;
  min-width: 180px;
  overflow: hidden;
  animation: pop .12s ease;
}
.sort-item {
  display: block;
  width: 100%;
  text-align: left;
  padding: 8px 10px;
  background: transparent;
  border: none;
  color: #0b3a57;
}
.sort-item:hover { background: rgba(0,120,255,0.06); }

/* minor button tweaks */
.btn { padding: 9px 12px; border-radius:8px; }
.btn.primary { padding:9px 14px; }

/* overall card shine */
.applications-container > * { transition: transform .12s ease, box-shadow .12s ease; }
.applications-container > *:hover { transform: translateY(-6px); box-shadow: 0 18px 36px rgba(6,45,80,0.06); }

/* responsive */
@media (max-width: 768px) {
  .sort-dropdown { left: 8px; right: 8px; top: 40px; }
}

/* results bar */
.results-bar {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 12px;
  margin-top: 0;
  margin-bottom: 8px;
  padding: 0 8px;
  box-sizing: border-box;
}

.results-count {
  color: #1b3a57;
  font-weight: 600;
  font-size: 0.95rem;
}

/* keep existing responsive rules */
@media (max-width: 768px) {
  .filter-input { min-width: 110px; }
  .filter-input.small { width: 100px; }
  .filter-input.wide {
    min-width: 180px;
    max-width: 100%;
  }
  
  .filter-input.narrow {
    min-width: 100px;
    max-width: 100%;
  }
}

/* narrow by 30px on first four controls */
.filter-card .filter-row .filter-input.narrow-30 {
  min-width: 120px !important;
  max-width: 170px !important;
}

/* wide search reduced by 30px */
.filter-card .filter-row .filter-input.wide.narrow-30 {
  min-width: 260px !important;
  max-width: 46% !important;
}

/* Ensure small inputs (date / salary) are larger without !important and without extra override classes.
   This targets small inputs inside .small-inputs groups in the filter row. */
.filter-card .filter-row .small-inputs .filter-input.small {
  min-width: 140px;
  max-width: 180px;
}

/* Make placeholder / format text (eg. mm/dd/yyyy) lighter / grey like other placeholders */

/* standard placeholder */
.filter-card .filter-row .small-inputs .filter-input.small::placeholder {
  color: #9fb3c8;
  opacity: 1;
}

/* vendor prefixes for broader support */
.filter-card .filter-row .small-inputs .filter-input.small::-webkit-input-placeholder { color: #9fb3c8; opacity: 1; }
.filter-card .filter-row .small-inputs .filter-input.small::-moz-placeholder { color: #9fb3c8; opacity: 1; }
.filter-card .filter-row .small-inputs .filter-input.small:-ms-input-placeholder { color: #9fb3c8; opacity: 1; }
.filter-card .filter-row .small-inputs .filter-input.small::-ms-input-placeholder { color: #9fb3c8; opacity: 1; }

/* Chrome / WebKit date controls (try to style the visible date-format text) */
.filter-card .filter-row input[type="date"].filter-input.small::-webkit-datetime-edit,
.filter-card .filter-row input[type="date"].filter-input.small::-webkit-datetime-edit-text,
.filter-card .filter-row input[type="date"].filter-input.small::-webkit-datetime-edit-day-field,
.filter-card .filter-row input[type="date"].filter-input.small::-webkit-datetime-edit-month-field,
.filter-card .filter-row input[type="date"].filter-input.small::-webkit-datetime-edit-year-field {
  color: #9fb3c8;
  opacity: 1;
}

/* responsive fallback */
@media (max-width: 768px) {
  .filter-card .filter-row .small-inputs .filter-input.small {
    min-width: 100px;
    max-width: 100%;
  }
}

/* target only the salary inputs (explicit class) - set narrower width (reduced by ~120px from very wide cases) */
.filter-card .filter-row .small-inputs .filter-input.salary-input {
  min-width: 120px;
  max-width: 140px;
}

/* keep date and other small inputs unchanged; placeholders already styled earlier */
/* responsive fallback */
@media (max-width: 768px) {
  .filter-card .filter-row .small-inputs .filter-input.salary-input {
    min-width: 100px;
    max-width: 48%;
  }
}

/* reuse gradient animation for consistency */
@keyframes filterGradientShiftApp {
  0% { background-position: 0% 50%;}
  50% { background-position: 100% 50%;}
  100% { background-position: 0% 50%;}
}

/* filter card refined */
.filter-card{
  background: linear-gradient(135deg, rgba(0,162,255,0.07), rgba(0,34,102,0.03));
  background-size: 300% 300%;
  animation: filterGradientShiftApp 8s linear infinite;
  border: 1px solid rgba(3,64,156,0.08);
  border-radius: 12px;
  box-shadow: 0 10px 28px rgba(6,45,80,0.05);
  padding: 14px 18px;
  backdrop-filter: blur(6px);
}

/* Ensure filter card and its dropdown sit above everything else.
   Many CSS properties (transform, filter, animation) create stacking contexts
   â€” give the filter card and dropdown a high z-index and position so they win. */
.filter-card {
  position: relative;    /* create a positioning context for children */
  z-index: 10020;        /* bring the entire filter area to front */
}

/* sort wrapper stays above siblings; dropdown absolutely positioned within it */
.sort-wrapper {
  position: relative;
  z-index: 10021;
}
.sort-wrapper .sort-dropdown {
  position: absolute !important;
  top: calc(100% + 8px) !important;
  right: 0 !important;
  left: auto !important;
  min-width: 160px;
  z-index: 10022 !important; /* ensure it's the very top layer */
}

/* Ensure filter card doesn't clip absolutely positioned children */
.filter-card {
  overflow: visible; /* allow dropdown to escape */
}

/* sort wrapper and dropdown stacking */
.sort-wrapper { position: relative; z-index: 0; }
.sort-wrapper .sort-dropdown {
  position: absolute;
  top: calc(100% + 10px);
  right: 0;
  z-index: 99999; /* very high so it stays on top */
  min-width: 180px;
  pointer-events: auto;
  transform-origin: top right;
}

/* Make sure main results/cards don't accidentally overlap by lowering their stacking */
.applications-container,
.applications-container > * {
  z-index: 1;
  position: relative;
}

/* If any card elements used very high z-index earlier, this will still win because filter has higher value.
   Save and hard-refresh the browser (Ctrl+F5). If you still see overlap, inspect the element that covers
   the dropdown in DevTools and paste its selector so I can lower or adjust it specifically. */

/* Collapsible filter-panel styles (same behaviour as JobsList) */
.filter-panel { position: relative; }
.filter-panel .filter-card {
  transition: max-height 320ms cubic-bezier(.2,.9,.2,1), opacity 220ms ease, transform 240ms ease, padding 240ms ease;
  overflow: hidden;
  max-height: 900px;
  opacity: 1;
}
.filter-panel.closed .filter-card {
  max-height: 0;
  opacity: 0;
  padding-top: 0;
  padding-bottom: 0;
  margin-bottom: 0;
  transform: translateY(-6px);
  pointer-events: none;
}
.filter-panel.open .filter-card {
  max-height: 1000px;
  opacity: 1;
  padding: 14px 18px;
  pointer-events: auto;
  transform: translateY(0);
}

/* filter toggle button */
.filter-toggle {
  position: absolute;
  right: 0;
  top: -10px;
  transform: translateY(-50%);
  display: inline-flex;
  align-items: center;
  gap: 8px;
  background: linear-gradient(180deg, #ffffff, #eef8ff);
  border: 1px solid rgba(3,64,156,0.12);
  color: #042e4d;
  padding: 8px 12px;
  border-radius: 999px;
  box-shadow: 0 6px 14px rgba(3,64,156,0.06);
  cursor: pointer;
  font-weight: 700;
  transition: background .18s ease, box-shadow .18s ease, transform .12s ease;
  -webkit-tap-highlight-color: transparent;
}
.filter-toggle:hover {
  transform: translateY(-54%);
  box-shadow: 0 10px 24px rgba(3,64,156,0.10);
}

/* open state: subtle visual change, no rotation */
.filter-panel.open .filter-toggle {
  background: linear-gradient(180deg, #e6f6ff, #d7edff);
  box-shadow: 0 10px 28px rgba(3,64,156,0.12);
  color: #013a66;
  transform: translateY(-54%);
}

/* Mirror JobsList: blueish filter toggle, no rotate, push card down when open */
.filter-toggle {
  background: linear-gradient(180deg,#007aff,#0057d6);
  color: #fff;
  border: none;
  box-shadow: 0 8px 18px rgba(3,64,156,0.12);
  padding: 8px 12px;
  border-radius: 999px;
  font-weight: 700;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  transition: transform .12s ease, box-shadow .12s ease, background .12s ease;
  z-index: 10030;
}

.filter-toggle:hover {
  transform: translateY(-3px);
  box-shadow: 0 14px 26px rgba(3,64,156,0.16);
}

.filter-panel .filter-toggle { transform-origin: center; }

.filter-panel.open .filter-card {
  margin-top: 14px;
}

/* Normalize filter-toggle transforms to avoid large jumps on hover/open.
   Keep behavior consistent with JobsList. */
.filter-panel .filter-toggle {
  transform: translateY(-50%);
  transition: transform .12s ease, box-shadow .12s ease, background .18s ease;
}

.filter-panel .filter-toggle:hover {
  transform: translateY(calc(-50% - 2px));
}

.filter-panel.open .filter-toggle {
  transform: translateY(calc(-50% - 2px));
}

/* Make sure filter panel doesn't clip dropdowns and bring them above content */
.filter-panel.open .filter-card {
  overflow: visible;      /* allow absolutely positioned children to escape */
  z-index: 10050;         /* bring the whole filter area to front */
}

/* Ensure sort dropdown sits above everything */
.sort-wrapper {
  position: relative;
  z-index: 10060;
}
.sort-wrapper .sort-dropdown {
  position: absolute !important;
  top: calc(100% + 8px) !important;
  right: 0 !important;
  left: auto !important;
  min-width: 160px;
  z-index: 10070 !important;
  pointer-events: auto;
}

/* If any other rules below override these, place this block at the end of the file. */
